name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS Login
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # role-to-assume: arn:aws:iam::684599054637:role/github_role
        aws-region: us-east-1
        # role-session-name: session
        role-chaining: true
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Configure kubectl
      env:
        EKS_CLUSTER_NAME: dsi-dev
      run: |
        aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
        VERSION=v1.23.6
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
          --progress-bar \
          --location \
          --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
    - name: Deploy to EKS
      env:
        KUBE_CONFIG_DATA : ${{ secrets.KUBE_CONFIG_DATA }}
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
        EKS_CLUSTER_NAME: dsi-dev
      run: |
        aws sts get-caller-identity
        aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
        sed -i "s/REPLACE_ME/$REGISTRY\/$REPOSITORY:$IMAGE_TAG/g" kubernetes/deployment.yaml
        kubectl apply -f kubernetes/namespace.yaml
        kubectl apply -f kubernetes/service.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl get pods -n python-web
        kubectl apply -f kubernetes/ingress.yaml -n python-web
